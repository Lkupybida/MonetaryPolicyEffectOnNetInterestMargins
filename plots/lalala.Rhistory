library(lubridate)
library(stats)
library(lfe)
data_with_OVDP <- read_csv("data/for_regressing/flattened.csv")
data <- data_with_OVDP %>% select(-OVDP)
data <- na.omit(data)
data$Bank <- as.factor(data$Bank)
model2 <- felm(NII ~ AE + LEV + CASH + NCI + TA + SEC + IR | Bank | 0 | 0, data = data)
generate_stargazer_with_titles(list(model2), c('Fixed effect model'))
best <- test_lag_combinations(data, 6)
cat('\n\n')
generate_stargazer_with_titles(list(model1, best), c('Simple OLS model', 'OLS model with best lags'))
best_fe <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 | Bank | 0 | 0, data = data)
generate_stargazer_with_titles(list(best_fe, model2), c('Best fixed effect model with lags', 'Fixed effect model'))
data_with_OVDP <- read_csv("data/for_regressing/flattened.csv")
data <- data_with_OVDP %>% select(-OVDP)
data <- na.omit(data)
df_pre2014 <- data[data$Date < "2014-01-01", ]
df_after2014 <- data[data$Date >= "2014-01-01", ]
df_after2014pre2022 <- df_after2014[df_after2014$Date < "2022-03-01", ]
df_after2022 <- data[data$Date >= "2022-03-01", ]
df_pre2014$Date <- as.Date(df_pre2014$Date)
df_pre2014$Bank <- as.factor(df_pre2014$Bank)
model4 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR | Bank | 0 | Bank, data = df_pre2014)
model4.5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 | Bank | 0 | Bank, data = df_pre2014)
generate_stargazer_with_titles(list(best_fe, model4, model4.5), c('Best FE model', 'Pre2014', 'Pre2014 lagged'))
df_after2014$Date <- as.Date(df_after2014$Date)
df_after2014$Bank <- as.factor(df_after2014$Bank)
model5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR |  Bank | 0 | Bank, data = df_after2014)
model5.5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = df_after2014)
# model <- lm(NII ~ AE + LEV + CASH + IR + NCI + TA + Date + Bank, data = data)
generate_stargazer_with_titles(list(best_fe, model5, model5.5), c('Best FE model', 'Post2014', 'Post2014 lagged'))
df_after2014pre2022$Date <- as.Date(df_after2014pre2022$Date)
df_after2014pre2022$Bank <- as.factor(df_after2014pre2022$Bank)
model6 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR | Bank | 0 | Bank, data = df_after2014pre2022)
model6.5 <- felm(NII ~ AE + LEV + CASH + NCI + TA + SEC + IR + IR_lag1 + IR_lag2 + IR_lag3 | Bank | 0 | Bank, data = df_after2014pre2022)
# model <- lm(NII ~ AE + LEV + CASH + IR + NCI + TA + Date + Bank, data = data)
generate_stargazer_with_titles(list(best_fe, model6, model6.5), c('Best FE model', 'Post2014-Pre2022', 'Post2014-Pre2022 lagged'))
df_after2022$Date <- as.Date(df_after2022$Date)
df_after2022$Bank <- as.factor(df_after2022$Bank)
model7 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR |  Bank | 0 | Bank, data = df_after2022)
model7.5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = df_after2022)
# model <- lm(NII ~ AE + LEV + CASH + IR + NCI + TA + Date + Bank, data = data)
generate_stargazer_with_titles(list(best_fe, model7, model7.5), c('Best FE model', 'Post2022', 'Post2022 lagged'))
functioning <- read_csv("data/for_regressing/banks_groups/functioning_or_not/functioning.csv", show_col_types = FALSE)  %>% select(-OVDP)
not_functioning <- read_csv("data/for_regressing/banks_groups/functioning_or_not/not_functioning.csv", show_col_types = FALSE)  %>% select(-OVDP)
functioning_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = functioning)
not_functioning_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = not_functioning)
generate_stargazer_with_titles(list(functioning_model, not_functioning_model), c('Functioning', 'Not functioning'))
top25 <- read_csv("data/for_regressing/banks_groups/top25_or_not/top25.csv", show_col_types = FALSE)  %>% select(-OVDP)
rest <- read_csv("data/for_regressing/banks_groups/top25_or_not/rest.csv", show_col_types = FALSE)  %>% select(-OVDP)
top25_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = top25)
rest_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = rest)
generate_stargazer_with_titles(list(top25_model, rest_model), c('Top 25', 'Rest'))
data_with_OVDP <- read_csv("data/for_regressing/flattened.csv", show_col_types = FALSE)
data <- data_with_OVDP %>% select(-OVDP)
data <- na.omit(data)
df_pre2014 <- data[data$Date < "2014-01-01", ]
df_after2014 <- data[data$Date >= "2014-01-01", ]
df_after2014pre2022 <- df_after2014[df_after2014$Date < "2022-03-01", ]
df_after2022 <- data[data$Date >= "2022-03-01", ]
library(readr)
library(dplyr)
library(stargazer)
library(forecast)
library(lubridate)
library(stats)
library(lfe)
source("LaggedFlatRegression_v3.Rmd")
library(readr)
library(dplyr)
library(stargazer)
library(forecast)
library(lubridate)
library(stats)
library(lfe)
source("~/Documents/GitHub/MonetaryPolicyEffectOnNetInterestMargins")
library(readr)
library(dplyr)
library(stargazer)
library(forecast)
library(lubridate)
library(stats)
library(lfe)
source("~/Documents/GitHub/MonetaryPolicyEffectOnNetInterestMargins/LaggedFlatRegression_v3.Rmd")
library(readr)
library(dplyr)
library(stargazer)
library(forecast)
library(lubridate)
library(stats)
library(lfe)
library(devtools)
install.packages("devtools")
library(readr)
library(dplyr)
library(stargazer)
library(forecast)
library(lubridate)
library(stats)
library(lfe)
library(devtools)
install.packages("devtools")
library(readr)
library(dplyr)
library(stargazer)
library(forecast)
library(lubridate)
library(stats)
library(lfe)
library(devtools)
library(lfe)
source("~/Documents/GitHub/MonetaryPolicyEffectOnNetInterestMargins/functions.R", echo=TRUE)
test_lag_combinations <- function(data, max_lag, output=FALSE) {
best_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR, data = data)
best_aic <- AIC(best_model)
print(best_aic)
for (include_non_lagged in c(FALSE, TRUE)) {
for (i in 1:max_lag) {
for (combination in combn(1:max_lag, i, simplify = FALSE)) {
if (include_non_lagged) {
formula <- as.formula(paste("NII ~ AE + LEV + CASH + NCI + SEC + TA + IR +", paste(paste0("IR_lag", combination), collapse = " + ")))
} else {
formula <- as.formula(paste("NII ~ AE + LEV + CASH + NCI + SEC + TA + ", paste(paste0("IR_lag", combination), collapse = " + ")))
}
model <- felm(formula, data = data)
current_aic <- AIC(model)
if (output == TRUE) {
cat("Best model formula: \n")
cat(deparse(formula(model)))
cat("\nAIC: ", current_aic, "\n\n") }
if (current_aic < best_aic) {
best_model <- model
best_aic <- current_aic
}
}
}
}
cat("Best model formula: \n")
cat(deparse(formula(model)))
return(best_model)
}
generate_stargazer_with_titles <- function(models, titles) {
library(stargazer)
type = "text"
align = TRUE
single_row = TRUE
if (length(models) != length(titles)) {
stop("The number of titles must match the number of models.")
}
# Calculate AIC scores
aic_scores <- sapply(models, AIC)
# Generate stargazer output
output <- capture.output(
stargazer(models, type = type, align = align, single.row = single_row)
)
# Remove quotes and leading numbers
output <- gsub('^\\s*\\[\\d+\\]\\s*"|"$', '', output)
# Find the position of the first separator line
separator_line <- which(grepl("^=+$", output))[1]
# Extract the width of the separator line
total_width <- nchar(output[separator_line])
# Calculate the width for each title
title_width <- floor(total_width / length(titles))
# Create aligned titles
aligned_titles <- paste("", sapply(titles, function(t) sprintf(paste0("%-", title_width, "s"), t)), collapse = "")
# Insert aligned titles at the top
output <- c(aligned_titles, output)
# Create AIC score row
aic_row <- gsub("Adjusted R2", "AIC", output[grep("Adjusted R2", output)])
aic_values <- sprintf("%.2f", aic_scores)
aic_row <- gsub("\\d+\\.\\d+", "%s", aic_row)
aic_row <- do.call(sprintf, c(list(aic_row), as.list(aic_values)))
# Find the position to insert AIC scores (after Adjusted R2 line)
adj_r2_line <- grep("Adjusted R2", output)
# Insert AIC scores
output <- c(output[1:adj_r2_line], aic_row, output[(adj_r2_line+1):length(output)])
# Print the modified output
cat(output, sep = "\n")
}
library(readr)
library(dplyr)
library(stargazer)
library(forecast)
library(lubridate)
library(stats)
library(lfe)
source("~/Documents/GitHub/MonetaryPolicyEffectOnNetInterestMargins/functions.R")
library(readr)
library(dplyr)
library(stargazer)
library(forecast)
library(lubridate)
library(stats)
library(lfe)
source("~/Documents/GitHub/MonetaryPolicyEffectOnNetInterestMargins/functions.R")
data_with_OVDP <- read_csv("data/for_regressing/flattened.csv")
data <- data_with_OVDP %>% select(-OVDP)
data <- na.omit(data)
data$Bank <- as.factor(data$Bank)
model2 <- felm(NII ~ AE + LEV + CASH + NCI + TA + SEC + IR | Bank | 0 | 0, data = data)
generate_stargazer_with_titles(list(model2), c('Fixed effect model'))
best_fe <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 | Bank | 0 | 0, data = data)
generate_stargazer_with_titles(list(best_fe, model2), c('Best fixed effect model with lags', 'Fixed effect model'))
data_with_OVDP <- read_csv("data/for_regressing/flattened.csv", show_col_types = FALSE)
data <- data_with_OVDP %>% select(-OVDP)
data <- na.omit(data)
df_pre2014 <- data[data$Date < "2014-01-01", ]
df_after2014 <- data[data$Date >= "2014-01-01", ]
df_after2014pre2022 <- df_after2014[df_after2014$Date < "2022-03-01", ]
df_after2022 <- data[data$Date >= "2022-03-01", ]
df_pre2014$Date <- as.Date(df_pre2014$Date)
df_pre2014$Bank <- as.factor(df_pre2014$Bank)
model4 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR | Bank | 0 | Bank, data = df_pre2014)
model4.5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 | Bank | 0 | Bank, data = df_pre2014)
generate_stargazer_with_titles(list(best_fe, model4, model4.5), c('Best FE model', 'Pre2014', 'Pre2014 lagged'))
df_after2014$Date <- as.Date(df_after2014$Date)
df_after2014$Bank <- as.factor(df_after2014$Bank)
model5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR |  Bank | 0 | Bank, data = df_after2014)
model5.5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = df_after2014)
# model <- lm(NII ~ AE + LEV + CASH + IR + NCI + TA + Date + Bank, data = data)
generate_stargazer_with_titles(list(best_fe, model5, model5.5), c('Best FE model', 'Post2014', 'Post2014 lagged'))
df_after2014pre2022$Date <- as.Date(df_after2014pre2022$Date)
df_after2014pre2022$Bank <- as.factor(df_after2014pre2022$Bank)
model6 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR | Bank | 0 | Bank, data = df_after2014pre2022)
model6.5 <- felm(NII ~ AE + LEV + CASH + NCI + TA + SEC + IR + IR_lag1 + IR_lag2 + IR_lag3 | Bank | 0 | Bank, data = df_after2014pre2022)
# model <- lm(NII ~ AE + LEV + CASH + IR + NCI + TA + Date + Bank, data = data)
generate_stargazer_with_titles(list(best_fe, model6, model6.5), c('Best FE model', 'Post2014-Pre2022', 'Post2014-Pre2022 lagged'))
df_after2022$Date <- as.Date(df_after2022$Date)
df_after2022$Bank <- as.factor(df_after2022$Bank)
model7 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR |  Bank | 0 | Bank, data = df_after2022)
model7.5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = df_after2022)
# model <- lm(NII ~ AE + LEV + CASH + IR + NCI + TA + Date + Bank, data = data)
generate_stargazer_with_titles(list(best_fe, model7, model7.5), c('Best FE model', 'Post2022', 'Post2022 lagged'))
functioning <- read_csv("data/for_regressing/banks_groups/functioning_or_not/functioning.csv", show_col_types = FALSE)  %>% select(-OVDP)
not_functioning <- read_csv("data/for_regressing/banks_groups/functioning_or_not/not_functioning.csv", show_col_types = FALSE)  %>% select(-OVDP)
functioning_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = functioning)
not_functioning_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = not_functioning)
generate_stargazer_with_titles(list(functioning_model, not_functioning_model), c('Functioning', 'Not functioning'))
top25 <- read_csv("data/for_regressing/banks_groups/top25_or_not/top25.csv", show_col_types = FALSE)  %>% select(-OVDP)
rest <- read_csv("data/for_regressing/banks_groups/top25_or_not/rest.csv", show_col_types = FALSE)  %>% select(-OVDP)
top25_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = top25)
rest_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = rest)
generate_stargazer_with_titles(list(top25_model, rest_model), c('Top 25', 'Rest'))
library(readr)
library(dplyr)
library(stargazer)
library(forecast)
library(lubridate)
library(stats)
library(lfe)
source("~/Documents/GitHub/MonetaryPolicyEffectOnNetInterestMargins/functions.R")
data_with_OVDP <- read_csv("data/for_regressing/flattened.csv")
data <- data_with_OVDP %>% select(-OVDP)
data <- na.omit(data)
data$Bank <- as.factor(data$Bank)
model2 <- felm(NII ~ AE + LEV + CASH + NCI + TA + SEC + IR | Bank | 0 | 0, data = data)
generate_stargazer_with_titles(list(model2), c('Fixed effect model'))
best_fe <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 | Bank | 0 | 0, data = data)
generate_stargazer_with_titles(list(best_fe, model2), c('Best fixed effect model with lags', 'Fixed effect model'))
data_with_OVDP <- read_csv("data/for_regressing/flattened.csv", show_col_types = FALSE)
data <- data_with_OVDP %>% select(-OVDP)
data <- na.omit(data)
df_pre2014 <- data[data$Date < "2014-01-01", ]
df_after2014 <- data[data$Date >= "2014-01-01", ]
df_after2014pre2022 <- df_after2014[df_after2014$Date < "2022-03-01", ]
df_after2022 <- data[data$Date >= "2022-03-01", ]
df_pre2014$Date <- as.Date(df_pre2014$Date)
df_pre2014$Bank <- as.factor(df_pre2014$Bank)
model4 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR | Bank | 0 | Bank, data = df_pre2014)
model4.5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 | Bank | 0 | Bank, data = df_pre2014)
generate_stargazer_with_titles(list(best_fe, model4, model4.5), c('Best FE model', 'Pre2014', 'Pre2014 lagged'))
df_after2014$Date <- as.Date(df_after2014$Date)
df_after2014$Bank <- as.factor(df_after2014$Bank)
model5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR |  Bank | 0 | Bank, data = df_after2014)
model5.5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = df_after2014)
# model <- lm(NII ~ AE + LEV + CASH + IR + NCI + TA + Date + Bank, data = data)
generate_stargazer_with_titles(list(best_fe, model5, model5.5), c('Best FE model', 'Post2014', 'Post2014 lagged'))
df_after2014pre2022$Date <- as.Date(df_after2014pre2022$Date)
df_after2014pre2022$Bank <- as.factor(df_after2014pre2022$Bank)
model6 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR | Bank | 0 | Bank, data = df_after2014pre2022)
model6.5 <- felm(NII ~ AE + LEV + CASH + NCI + TA + SEC + IR + IR_lag1 + IR_lag2 + IR_lag3 | Bank | 0 | Bank, data = df_after2014pre2022)
# model <- lm(NII ~ AE + LEV + CASH + IR + NCI + TA + Date + Bank, data = data)
generate_stargazer_with_titles(list(best_fe, model6, model6.5), c('Best FE model', 'Post2014-Pre2022', 'Post2014-Pre2022 lagged'))
df_after2022$Date <- as.Date(df_after2022$Date)
df_after2022$Bank <- as.factor(df_after2022$Bank)
model7 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR |  Bank | 0 | Bank, data = df_after2022)
model7.5 <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = df_after2022)
# model <- lm(NII ~ AE + LEV + CASH + IR + NCI + TA + Date + Bank, data = data)
generate_stargazer_with_titles(list(best_fe, model7, model7.5), c('Best FE model', 'Post2022', 'Post2022 lagged'))
functioning <- read_csv("data/for_regressing/banks_groups/functioning_or_not/functioning.csv", show_col_types = FALSE)  %>% select(-OVDP)
not_functioning <- read_csv("data/for_regressing/banks_groups/functioning_or_not/not_functioning.csv", show_col_types = FALSE)  %>% select(-OVDP)
functioning_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = functioning)
not_functioning_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = not_functioning)
generate_stargazer_with_titles(list(functioning_model, not_functioning_model), c('Functioning', 'Not functioning'))
top25 <- read_csv("data/for_regressing/banks_groups/top25_or_not/top25.csv", show_col_types = FALSE)  %>% select(-OVDP)
rest <- read_csv("data/for_regressing/banks_groups/top25_or_not/rest.csv", show_col_types = FALSE)  %>% select(-OVDP)
top25_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = top25)
rest_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = rest)
generate_stargazer_with_titles(list(top25_model, rest_model), c('Top 25', 'Rest'))
sec_aver <- rowMeans(securities[,-1], na.rm = TRUE)
ref_aver <- rowMeans(refinanced[,-1], na.rm = TRUE)
model <- lm(Refinanced ~ Securities, data = oschad)
stargazer(model, type = "text", align = TRUE, single.row = TRUE)
sec_oschad <- securities['ОЩАДБАНК']
ref_oschad <- refinanced['oschadbank']
date <- securities['Date']
oschad <- data.frame(Date = date, Refinanced = ref_oschad, Securities = sec_oschad)
colnames(oschad) <- c("date", "Refinanced", "Securities")
sec_aver <- rowMeans(securities[,-1], na.rm = TRUE)
ref_aver <- rowMeans(refinanced[,-1], na.rm = TRUE)
sec_aver <- rowMeans(securities[,-1], na.rm = TRUE)
refinanced_numeric <- as.data.frame(lapply(refinanced[,-1], function(x) as.numeric(as.character(x))))
ref_aver <- rowMeans(refinanced_numeric, na.rm = TRUE)
date <- securities[['Date']]
averaged_data <- data.frame(Date = date, Securities_Average = sec_aver, Refinanced_Average = ref_aver)
colnames(averaged_data) <- c("date", "Refinanced", "Securities")
model <- lm(Refinanced ~ Securities, data = averaged_data)
stargazer(model, type = "text", align = TRUE, single.row = TRUE)
averaged_data$date <- as.Date(averaged_data$date)
ggplot(averaged_data, aes(x = date)) +
geom_line(aes(y = Refinanced, color = "Refinanced", linetype = "Refinanced"), linewidth = 0.8) +
geom_line(aes(y = Securities, color = "Securities", linetype = "Securities"), linewidth = 0.8) +
geom_line(aes(y = Securities * 1.169 + 30885906.000, color = "Securities adj.", linetype = "Securities adj."), linewidth = 0.8) +
labs(title = "Oschadbank Refinanced and Securities Over Time",
x = "Date",
y = "Value",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_color_manual(values = c("Refinanced" = "blue", "Securities" = "green", "Securities adj." = "lightgreen")) +
scale_linetype_manual(values = c("Refinanced" = "solid", "Securities" = "solid", "Securities adj." = "dashed"))
sec_aver <- rowMeans(securities[,-1], na.rm = TRUE)
refinanced_numeric <- as.data.frame(lapply(refinanced[,-1][, sapply(refinanced[,-1], is.numeric)], function(x) as.numeric(as.character(x))))
ref_aver <- rowMeans(refinanced_numeric, na.rm = TRUE)
date <- securities[['Date']]
averaged_data <- data.frame(Date = date, Securities_Average = sec_aver, Refinanced_Average = ref_aver)
colnames(averaged_data) <- c("date", "Refinanced", "Securities")
model <- lm(Refinanced ~ Securities, data = averaged_data)
stargazer(model, type = "text", align = TRUE, single.row = TRUE)
sec_aver <- rowMeans(as.data.frame(lapply(securities[,-1][, sapply(securities[,-1], is.numeric)], function(x) as.numeric(as.character(x)))), na.rm = TRUE)
ref_aver <- rowMeans(as.data.frame(lapply(refinanced[,-1][, sapply(refinanced[,-1], is.numeric)], function(x) as.numeric(as.character(x)))), na.rm = TRUE)
date <- securities[['Date']]
averaged_data <- data.frame(Date = date, Securities_Average = sec_aver, Refinanced_Average = ref_aver)
colnames(averaged_data) <- c("date", "Refinanced", "Securities")
model <- lm(Refinanced ~ Securities, data = averaged_data)
stargazer(model, type = "text", align = TRUE, single.row = TRUE)
averaged_data$date <- as.Date(averaged_data$date)
ggplot(averaged_data, aes(x = date)) +
geom_line(aes(y = Refinanced, color = "Refinanced", linetype = "Refinanced"), linewidth = 0.8) +
geom_line(aes(y = Securities, color = "Securities", linetype = "Securities"), linewidth = 0.8) +
geom_line(aes(y = Securities * 1.169 + 30885906.000, color = "Securities adj.", linetype = "Securities adj."), linewidth = 0.8) +
labs(title = "Oschadbank Refinanced and Securities Over Time",
x = "Date",
y = "Value",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_color_manual(values = c("Refinanced" = "blue", "Securities" = "green", "Securities adj." = "lightgreen")) +
scale_linetype_manual(values = c("Refinanced" = "solid", "Securities" = "solid", "Securities adj." = "dashed"))
refinanced <- read_csv("data/extracted/2018_to_now_monthly/refinanced_by_nbu.csv")
securities <- read.csv("data/extracted/2018_to_now_monthly/securities.csv")
securities <- securities[securities$Date >= "2019-01-01", ]
securities <- securities[securities$Date < "2024-04-01", ]
refinanced <- read_csv("data/extracted/2018_to_now_monthly/refinanced_by_nbu.csv", show_col_types = FALSE)
securities <- read.csv("data/extracted/2018_to_now_monthly/securities.csv", show_col_types = FALSE)
refinanced <- read_csv("data/extracted/2018_to_now_monthly/refinanced_by_nbu.csv", show_col_types = FALSE)
securities <- read.csv("data/extracted/2018_to_now_monthly/securities.csv")
securities <- securities[securities$Date >= "2019-01-01", ]
securities <- securities[securities$Date < "2024-04-01", ]
refinanced <- read_csv("data/extracted/2018_to_now_monthly/refinanced_by_nbu.csv", show_col_types = FALSE)
securities <- read.csv("data/extracted/2018_to_now_monthly/securities.csv", show_col_types = FALSE)
suppressPackageStartupMessages(library(readr))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(stargazer))
suppressPackageStartupMessages(library(forecast))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(stats))
suppressPackageStartupMessages(library(lfe))
suppressPackageStartupMessages(library(ggplot2))
refinanced <- read_csv("data/extracted/2018_to_now_monthly/refinanced_by_nbu.csv", show_col_types = FALSE)
securities <- read.csv("data/extracted/2018_to_now_monthly/securities.csv", )
securities <- securities[securities$Date >= "2019-01-01", ]
securities <- securities[securities$Date < "2024-04-01", ]
sec_aver <- rowMeans(as.data.frame(lapply(securities[,-1][, sapply(securities[,-1], is.numeric)], function(x) as.numeric(as.character(x)))), na.rm = TRUE)
ref_aver <- rowMeans(as.data.frame(lapply(refinanced[,-1][, sapply(refinanced[,-1], is.numeric)], function(x) as.numeric(as.character(x)))), na.rm = TRUE)
date <- securities[['Date']]
averaged_data <- data.frame(Date = date, Securities_Average = sec_aver, Refinanced_Average = ref_aver)
colnames(averaged_data) <- c("date", "Refinanced", "Securities")
model <- lm(Refinanced ~ Securities, data = averaged_data)
stargazer(model, type = "text", align = TRUE, single.row = TRUE)
averaged_data$date <- as.Date(averaged_data$date)
ggplot(averaged_data, aes(x = date)) +
geom_line(aes(y = Refinanced, color = "Refinanced", linetype = "Refinanced"), linewidth = 0.8) +
geom_line(aes(y = Securities, color = "Securities", linetype = "Securities"), linewidth = 0.8) +
geom_line(aes(y = Securities * 1.169 + 30885906.000, color = "Securities adj.", linetype = "Securities adj."), linewidth = 0.8) +
labs(title = "Oschadbank Refinanced and Securities Over Time",
x = "Date",
y = "Value",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_color_manual(values = c("Refinanced" = "blue", "Securities" = "green", "Securities adj." = "lightgreen")) +
scale_linetype_manual(values = c("Refinanced" = "solid", "Securities" = "solid", "Securities adj." = "dashed"))
sec_oschad <- securities['ОЩАДБАНК']
ref_oschad <- refinanced['oschadbank']
date <- securities['Date']
oschad <- data.frame(Date = date, Refinanced = ref_oschad, Securities = sec_oschad)
colnames(oschad) <- c("date", "Refinanced", "Securities")
model <- lm(Refinanced ~ Securities, data = oschad)
stargazer(model, type = "text", align = TRUE, single.row = TRUE)
oschad$date <- as.Date(oschad$date)
ggplot(oschad, aes(x = date)) +
geom_line(aes(y = Refinanced, color = "Refinanced", linetype = "Refinanced"), linewidth = 0.8) +
geom_line(aes(y = Securities, color = "Securities", linetype = "Securities"), linewidth = 0.8) +
geom_line(aes(y = Securities * 1.169 + 30885906.000, color = "Securities adj.", linetype = "Securities adj."), linewidth = 0.8) +
labs(title = "Oschadbank Refinanced and Securities Over Time",
x = "Date",
y = "Value",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_color_manual(values = c("Refinanced" = "blue", "Securities" = "green", "Securities adj." = "lightgreen")) +
scale_linetype_manual(values = c("Refinanced" = "solid", "Securities" = "solid", "Securities adj." = "dashed"))
averaged_data$date <- as.Date(averaged_data$date)
ggplot(averaged_data, aes(x = date)) +
geom_line(aes(y = Refinanced, color = "Refinanced", linetype = "Refinanced"), linewidth = 0.8) +
geom_line(aes(y = Securities, color = "Securities", linetype = "Securities"), linewidth = 0.8) +
geom_line(aes(y = Securities * 0.364 - 1010344, color = "Securities adj.", linetype = "Securities adj."), linewidth = 0.8) +
labs(title = "Oschadbank Refinanced and Securities Over Time",
x = "Date",
y = "Value",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_color_manual(values = c("Refinanced" = "blue", "Securities" = "green", "Securities adj." = "lightgreen")) +
scale_linetype_manual(values = c("Refinanced" = "solid", "Securities" = "solid", "Securities adj." = "dashed"))
averaged_data$date <- as.Date(averaged_data$date)
ggplot(averaged_data, aes(x = date)) +
geom_line(aes(y = Refinanced, color = "Refinanced", linetype = "Refinanced"), linewidth = 0.8) +
geom_line(aes(y = Securities - 1010344, color = "Securities", linetype = "Securities"), linewidth = 0.8) +
geom_line(aes(y = Securities * 0.364 - 1010344, color = "Securities adj.", linetype = "Securities adj."), linewidth = 0.8) +
labs(title = "Oschadbank Refinanced and Securities Over Time",
x = "Date",
y = "Value",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_color_manual(values = c("Refinanced" = "blue", "Securities" = "green", "Securities adj." = "lightgreen")) +
scale_linetype_manual(values = c("Refinanced" = "solid", "Securities" = "solid", "Securities adj." = "dashed"))
averaged_data$date <- as.Date(averaged_data$date)
ggplot(averaged_data, aes(x = date)) +
geom_line(aes(y = Refinanced, color = "Refinanced", linetype = "Refinanced"), linewidth = 0.8) +
geom_line(aes(y = Securities - 1010344 -1010344, color = "Securities", linetype = "Securities"), linewidth = 0.8) +
geom_line(aes(y = Securities * 0.364 - 1010344, color = "Securities adj.", linetype = "Securities adj."), linewidth = 0.8) +
labs(title = "Oschadbank Refinanced and Securities Over Time",
x = "Date",
y = "Value",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_color_manual(values = c("Refinanced" = "blue", "Securities" = "green", "Securities adj." = "lightgreen")) +
scale_linetype_manual(values = c("Refinanced" = "solid", "Securities" = "solid", "Securities adj." = "dashed"))
averaged_data$date <- as.Date(averaged_data$date)
ggplot(averaged_data, aes(x = date)) +
geom_line(aes(y = Refinanced, color = "Refinanced", linetype = "Refinanced"), linewidth = 0.8) +
geom_line(aes(y = Securities, color = "Securities", linetype = "Securities"), linewidth = 0.8) +
geom_line(aes(y = Securities * 0.364 - 1010344, color = "Securities adj.", linetype = "Securities adj."), linewidth = 0.8) +
labs(title = "Oschadbank Refinanced and Securities Over Time",
x = "Date",
y = "Value",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_color_manual(values = c("Refinanced" = "blue", "Securities" = "green", "Securities adj." = "lightgreen")) +
scale_linetype_manual(values = c("Refinanced" = "solid", "Securities" = "solid", "Securities adj." = "dashed"))
averaged_data$date <- as.Date(averaged_data$date)
ggplot(averaged_data, aes(x = date)) +
geom_line(aes(y = Refinanced, color = "Refinanced", linetype = "Refinanced"), linewidth = 0.8) +
geom_line(aes(y = Securities, color = "Securities", linetype = "Securities"), linewidth = 0.8) +
geom_line(aes(y = Securities * 0.364 - 1010344, color = "Securities adj.", linetype = "Securities adj."), linewidth = 0.8) +
labs(title = "Oschadbank Refinanced and Securities Over Time",
x = "Date",
y = "Value",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_color_manual(values = c("Refinanced" = "blue", "Securities" = "green", "Securities adj." = "red")) +
scale_linetype_manual(values = c("Refinanced" = "solid", "Securities" = "solid", "Securities adj." = "dashed"))
oschad$date <- as.Date(oschad$date)
ggplot(oschad, aes(x = date)) +
geom_line(aes(y = Refinanced, color = "Refinanced", linetype = "Refinanced"), linewidth = 0.8) +
geom_line(aes(y = Securities, color = "Securities", linetype = "Securities"), linewidth = 0.8) +
geom_line(aes(y = Securities * 1.169 + 30885906.000, color = "Securities adj.", linetype = "Securities adj."), linewidth = 0.8) +
labs(title = "Oschadbank Refinanced and Securities Over Time",
x = "Date",
y = "Value",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_color_manual(values = c("Refinanced" = "blue", "Securities" = "green", "Securities adj." = "red")) +
scale_linetype_manual(values = c("Refinanced" = "solid", "Securities" = "solid", "Securities adj." = "dashed"))
functioning <- read_csv("data/for_regressing/banks_groups/functioning_or_not/functioning.csv", show_col_types = FALSE)  %>% select(-OVDP)
not_functioning <- read_csv("data/for_regressing/banks_groups/functioning_or_not/not_functioning.csv", show_col_types = FALSE)  %>% select(-OVDP)
functioning_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = functioning)
not_functioning_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = not_functioning)
generate_stargazer_with_titles(list(best_fe, functioning_model, not_functioning_model), c('Best FE model', 'Functioning', 'Not functioning'))
top25 <- read_csv("data/for_regressing/banks_groups/top25_or_not/top25.csv", show_col_types = FALSE)  %>% select(-OVDP)
rest <- read_csv("data/for_regressing/banks_groups/top25_or_not/rest.csv", show_col_types = FALSE)  %>% select(-OVDP)
top25_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = top25)
rest_model <- felm(NII ~ AE + LEV + CASH + NCI + SEC + TA + IR + IR_lag1 + IR_lag2 + IR_lag3 |  Bank | 0 | Bank, data = rest)
generate_stargazer_with_titles(list(best_fe, top25_model, rest_model), c('Best FE model', 'Top 25', 'Rest'))
